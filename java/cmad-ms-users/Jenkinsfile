pipeline {

	agent any

    	stages{
		stage("build"){
			agent{
				docker{
					image 'maven:3.6.1-jdk-8-slim'
					args '-v $HOME/.m2:/root/.m2'
				}
			}
			steps{
				echo 'Compiling users app..'
			 	dir('java/cmad-ms-users'){
             				sh 'mvn compile'
        			}
			}
		}
		stage("test"){
		        agent{
				docker{
					image 'maven:3.6.1-jdk-8-slim'
					args '-v $HOME/.m2:/root/.m2'
				}
			}
    			steps{
				echo 'Running Unit Tets on...'
 				dir('java/cmad-ms-users'){
          				sh 'mvn clean test'
        			}
			}
 		}
		stage("package"){
			agent{
				docker{
					image 'maven:3.6.1-jdk-8-slim'
					args '-v $HOME/.m2:/root/.m2'
				}
			}
			steps{
				echo 'Packaging users app'
 				dir('java/cmad-ms-users'){
 					sh 'mvn package -DskipTests'
					archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
				}
			}
 		}
 		stage('docker-package'){
			agent any
      			steps{
        			echo 'Packaging users app with docker'
        			script{
					docker.withRegistry('https://index.docker.io/v1/', 'dockervevuri') {
						def usersImage = docker.build("vevuri/users:v${env.BUILD_ID}", "./java/cmad-ms-users")
						usersImage.push()
						usersImage.push("latest")
					}
				}
			}
		}
	}
    	post{
      		always{
			echo 'Building multibranch pipeline for users is completed..' }
	}
}
